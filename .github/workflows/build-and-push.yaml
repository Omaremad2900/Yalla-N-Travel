name: Build and Push Docker Images to AWS ECR

on:
  push:
    branches:
      - main

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"  # Ignore commits with [skip ci]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: me-south-1  

    - name: Generate Image Tag
      id: get-tag
      run: echo "IMAGE_TAG=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region me-south-1 | docker login --username AWS --password-stdin 615299727797.dkr.ecr.me-south-1.amazonaws.com/yalla-n-travel

    - name: Build and Push API Image
      run: |
        REPO_URI=615299727797.dkr.ecr.me-south-1.amazonaws.com/yalla-n-travel
        docker build -t $REPO_URI:api-$IMAGE_TAG -f api/Dockerfile api/
        docker push $REPO_URI:api-$IMAGE_TAG

    - name: Build and Push Client Image
      run: |
        REPO_URI=615299727797.dkr.ecr.me-south-1.amazonaws.com/yalla-n-travel
        docker build -t $REPO_URI:client-$IMAGE_TAG -f client/Dockerfile client/
        docker push $REPO_URI:client-$IMAGE_TAG
        
    - name: Save Image Tag for Deployment
      run: echo "IMAGE_TAG=$IMAGE_TAG" > image_tag.txt

    - name: Upload Image Tag Artifact
      uses: actions/upload-artifact@v3
      with:
        name: image-tag
        path: image_tag.txt
