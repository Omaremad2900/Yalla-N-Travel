name: Deploy to Kubernetes

on:
  workflow_run:
    workflows: ["Build and Push Docker Images to AWS ECR"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: me-south-1

    - name: Set up Kubernetes Config for AWS EKS
      run: |
        aws eks update-kubeconfig --name yalla --region me-south-1

    - name: Install Helm
      run: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

    - name: Install ArgoCD CLI
      run: |
        curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        chmod +x argocd-linux-amd64
        sudo mv argocd-linux-amd64 /usr/local/bin/argocd

    - name: Install yq
      run: |
        sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
        sudo chmod +x /usr/local/bin/yq

    - name: Authenticate with AWS ECR
      run: |
        aws ecr get-login-password --region me-south-1 | docker login --username AWS --password-stdin 615299727797.dkr.ecr.me-south-1.amazonaws.com

    #- name: Update Helm Image Tag
     # run: |
      #  yq eval '.api.image = "615299727797.dkr.ecr.me-south-1.amazonaws.com/yalla-n-travel"' -i helm/values.yaml
      #  yq eval '.api.tag = "mern-api-latest"' -i helm/values.yaml
       # yq eval '.client.tag = "mern-client-latest"' -i helm/values.yaml

    #- name: Deploy with Helm
     # run: |
       # helm upgrade --install yalla-n-travel ./helm --namespace default --create-namespace

    - name: Sync with ArgoCD
      run: |
        argocd login $ARGOCD_SERVER --username admin --password $ARGOCD_PASSWORD --grpc-web --insecure
        argocd app sync yalla-n-travel
      env:
        ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
        ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}

    - name: Force Kubernetes to Pull New Image
      run: |
        kubectl rollout restart deployment mern-api
        kubectl rollout restart deployment mern-client
