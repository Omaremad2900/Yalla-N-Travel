apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-ingress
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing  # Makes it accessible publicly
    alb.ingress.kubernetes.io/target-type: ip         # Uses Pod IPs instead of NodePort
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'  # Supports HTTP/HTTPS
    alb.ingress.kubernetes.io/group.name: "yalla-n-travel"  # Groups ALB resources
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=3600
    alb.ingress.kubernetes.io/healthcheck-path: "/"   # Health check path for ALB
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "30"
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "10"
    alb.ingress.kubernetes.io/success-codes: "200,301,302"
    alb.ingress.kubernetes.io/enable-http2: "true"
    alb.ingress.kubernetes.io/enable-waf: "false"
    alb.ingress.kubernetes.io/enable-wafv2: "false"
    alb.ingress.kubernetes.io/enable-shield: "false"

spec:
  ingressClassName: alb  # Use AWS ALB instead of Nginx
  rules:
  - host: {{ .Values.ingress.clientHost }} # Your frontend domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mern-client-service
            port:
              number: {{ .Values.service.client.port }}

  - host: {{ .Values.ingress.apiHost }} # Your backend domain
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: mern-api-service
            port:
              number: {{ .Values.service.api.port }}

      - path: /socket.io
        pathType: Prefix
        backend:
          service:
            name: mern-api-service
            port:
              number: 4000  # WebSockets for real-time communication
